[{"C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\index.js":"1","C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\App.js":"2","C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\reportWebVitals.js":"3","C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\components\\common\\CustomBootstrap.js":"4","C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\components\\common\\CustomSelectInput.js":"5","C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\folder\\login.js":"6","C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\folder\\register\\register.js":"7","C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\folder\\homePage\\home.js":"8","C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\folder\\loginFolder\\loginPage.js":"9","C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\folder\\loginFolder\\appBar.js":"10","C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\folder\\homePage\\drawer_TopNav.js":"11"},{"size":592,"mtime":1611998717683,"results":"12","hashOfConfig":"13"},{"size":539,"mtime":1613813685649,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":295,"mtime":1611072311724,"results":"16","hashOfConfig":"13"},{"size":314,"mtime":1611073218634,"results":"17","hashOfConfig":"13"},{"size":852,"mtime":1613813685649,"results":"18","hashOfConfig":"13"},{"size":4888,"mtime":1613813685649,"results":"19","hashOfConfig":"13"},{"size":633,"mtime":1613850764153,"results":"20","hashOfConfig":"13"},{"size":5853,"mtime":1613811342991,"results":"21","hashOfConfig":"13"},{"size":1574,"mtime":1613811317542,"results":"22","hashOfConfig":"13"},{"size":7143,"mtime":1613815294484,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"qz4f1e",{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"26"},"C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\index.js",[],["56","57"],"C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\App.js",["58","59","60"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Login from './folder/login';\nimport Home from './folder/homePage/home'\nimport {\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from 'react-router-dom';\n\n\n\nconst App = () => {\n\n\n  return (\n<>\n\n    {/* // <div > */}\n\n  \n        <Switch>\n        <Redirect exact from=\"/\" to=\"/login\" />\n          <Route  path=\"/login\" component={Login}  />\n          <Route path=\"/home\" component={Home} />\n        </Switch>\n \n\n    {/* // </div> */}\n    </>\n  );\n}\n\n\nexport default App;\n","C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\reportWebVitals.js",[],"C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\components\\common\\CustomBootstrap.js",[],["61","62"],"C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\components\\common\\CustomSelectInput.js",[],["63","64"],"C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\folder\\login.js",["65"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport Register from './register/register';\r\nimport LoginPage from './loginFolder/loginPage';\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const [status, setStatus] = useState(true)\r\n\r\n\r\n    const toggle = () => {\r\n        setStatus(!status)\r\n    }\r\n\r\n    return (\r\n  <>\r\n            {/* // <div className=\"pos-center\"> */}\r\n\r\n                {status ?\r\n                    <LoginPage\r\n                        toggle={toggle}\r\n                        status={status}\r\n                        setStatus={setStatus}\r\n                    /> :\r\n                    <Register\r\n                        toggle={toggle}\r\n                        status={status}\r\n                        setStatus={setStatus}\r\n                    />}\r\n            {/* // </div> */}\r\n\r\n      </> \r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\folder\\register\\register.js",["66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83"],"import React, { useState, useEffect } from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport * as Yup from 'yup';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from 'react-router-dom';\r\nimport {\r\n    Row,\r\n    Card,\r\n    CardTitle,\r\n    CardBody,\r\n    Nav,\r\n    NavItem,\r\n    TabContent,\r\n    TabPane,\r\n    CardHeader,\r\n    Collapse,\r\n    Input,\r\n    FormText,\r\n    FormGroup,\r\n    // Button,\r\n    // ButtonGroup\r\n} from 'reactstrap';\r\nimport { Colxx, Separator } from '../../components/common/CustomBootstrap'\r\nimport AppBar from '../loginFolder/appBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            // width: '25ch',\r\n            flexGrow: 1\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2)\r\n          },\r\n          title: {\r\n            flexGrow: 1\r\n          }\r\n    },\r\n}));\r\n\r\nconst Register = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    console.log(\"props\", props)\r\n\r\n    const [formFields, setFormFields] = useState({\r\n        firstname: '',\r\n        lastname: ''\r\n    });\r\n    const [formErrors, setFormErrors] = useState({\r\n        firstname: '',\r\n        lastname: ''\r\n    });\r\n    const [validations, setValidations] = useState({\r\n        firstname: Yup.string().required(\"Please enter the first name\"),\r\n        lastname: Yup.string().required(\"Please enter the last name\")\r\n    });\r\n\r\n    const OnChangeHandler = (name, value) => {\r\n\r\n        let temp = { ...formFields };\r\n        temp[name] = value;\r\n        setFormFields(temp);\r\n\r\n    };\r\n    const isFormValid = async () => {\r\n        let temp = { ...formErrors };\r\n        let valid = true;\r\n        for (let name of Object.keys(validations)) {\r\n            try {\r\n                let result = await validations[name].validate(formFields[name]);\r\n                if (result === formFields[name]) {\r\n                    temp[name] = '';\r\n                }\r\n            } catch (err) {\r\n                temp[name] = err.message;\r\n                valid = false;\r\n            }\r\n        }\r\n        setFormErrors(temp);\r\n        return valid;\r\n    };\r\n    const submitForm = () => {\r\n        isFormValid()\r\n            .then((valid) => {\r\n                if (valid) {\r\n                    console.log(\"successfully submitted for register\")\r\n                    history.push(\"/home\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        \r\n<div className={classes.root}>\r\n<AppBar />\r\n            <div className=\"pos-center\">\r\n                <Row>\r\n                    <h1 className=\"pos-center\">Register</h1>\r\n                </Row>\r\n                <Row>\r\n                    <form className={classes.root} autoComplete=\"off\">\r\n                        <Colxx xxs=\"12\" sm=\"4\" md=\"4\" className=\"mb-1-display\">\r\n                            <TextField id=\"standard-basic\" label=\"First Name\" onChange={(event) => {\r\n                                OnChangeHandler('firstname', event.target.value);\r\n                            }} />\r\n                            <FormText className=\"color-red\">\r\n                                {formErrors['firstname']}\r\n                            </FormText>\r\n                        </Colxx>\r\n\r\n\r\n                        <Colxx xxs=\"12\" sm=\"4\" md=\"4\" className=\"mb-1-display\">\r\n                            <TextField id=\"standard-basic\" label=\"Last Name\" onChange={(event) => {\r\n                                OnChangeHandler('lastname', event.target.value);\r\n                            }} />\r\n                            <FormText className=\"color-red\">\r\n                                {formErrors['lastname']}\r\n                            </FormText>\r\n                        </Colxx>\r\n\r\n\r\n                        {/* <Button onClick={submitForm}> Submit</Button> */}\r\n                    </form>\r\n                    <Row>\r\n                    <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\r\n                            {/* <Button onClick={submitForm}> Submit</Button> */}\r\n                            <Link><p onClick={submitForm} className='p-t-l-r'> SUBMIT</p></Link>\r\n                            <Link><p onClick={props.toggle} className='p-t-l-r'> LOGIN</p></Link>\r\n                            {/* <Button onClick={props.toggle}>Login</Button> */}\r\n                        </ButtonGroup>\r\n\r\n                    </Row>\r\n                </Row>\r\n\r\n\r\n            </div>\r\n            </div>\r\n    )\r\n\r\n}\r\nexport default Register;","C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\folder\\homePage\\home.js",["84","85","86","87","88","89"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport { useHistory, NavLink, useLocation } from 'react-router-dom';\r\nimport Drawer_TopNav from './drawer_TopNav';\r\n\r\nconst Home =({props, match}) =>{\r\n    const history = useHistory();\r\n\r\n    const [res, setRes]=useState(\r\n        useLocation().state?.fruit\r\n    )\r\n    console.log(\"res,\", res)\r\n    const[temp,setTemp]=useState(\r\n        match.params.id\r\n    )\r\n    console.log(\"temp0\",temp)\r\n    useEffect(() => {\r\n        localStorage.setItem('id', temp);\r\n    }, [])\r\n\r\n    \r\n    return (\r\n<div>\r\n\r\n    <Drawer_TopNav />\r\n    home\r\n\r\n</div>\r\n    )\r\n\r\n}\r\nexport default Home;","C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\folder\\loginFolder\\loginPage.js",["90","91","92","93","94","95","96","97","98"],"import React, { useState, useEffect, useLocalStorage } from 'react'\r\n// import { useLocalStorage } from './useLocalStorage';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from 'react-router-dom';\r\nimport {\r\n    Row,\r\n    FormText,\r\n} from 'reactstrap';\r\nimport { Colxx } from '../../components/common/CustomBootstrap'\r\n\r\nimport AppBar from './appBar';\r\n// import AppBar from '@material-ui/core/AppBar';\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\n// import Typography from '@material-ui/core/Typography';\r\n\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            // width: '25ch',\r\n            flexGrow: 1\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2)\r\n          },\r\n          title: {\r\n            flexGrow: 1\r\n          }\r\n    },\r\n}));\r\n\r\n\r\n// const useStyles1 = makeStyles((theme) => ({\r\n//     root: {\r\n//       flexGrow: 1\r\n//     },\r\n//     menuButton: {\r\n//       marginRight: theme.spacing(2)\r\n//     },\r\n//     title: {\r\n//       flexGrow: 1\r\n//     }\r\n//   }));\r\nconst LoginPage = (props) => {\r\n    const history = useHistory();\r\n    const [status, setStatus] = useState(true)\r\n    const classes = useStyles();\r\n    // const classes1 = useStyles1();\r\n    const [formFields, setFormFields] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n    const [formErrors, setFormErrors] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n\r\n\r\n    const [validations, setValidations] = useState({\r\n        username: Yup.string().required(\"Please enter the username\"),\r\n        password: Yup.string().required(\"Please enter the password\")\r\n    });\r\n    const isFormValid = async () => {\r\n        let temp = { ...formErrors };\r\n        let valid = true;\r\n        for (let name of Object.keys(validations)) {\r\n            try {\r\n                let result = await validations[name].validate(formFields[name]);\r\n                if (result === formFields[name]) {\r\n                    temp[name] = '';\r\n                }\r\n            } catch (err) {\r\n                temp[name] = err.message;\r\n                valid = false;\r\n            }\r\n        }\r\n        setFormErrors(temp);\r\n        return valid;\r\n    };\r\n\r\n    const submitForm = () => {\r\n        isFormValid()\r\n            .then((valid) => {\r\n                if (valid) {\r\n                    history.push(\"/home\")\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.error(err);\r\n            });\r\n    };\r\n\r\n\r\n\r\n    const OnChangeHandler = (name, value) => {\r\n\r\n        let temp = { ...formFields };\r\n        temp[name] = value;\r\n        setFormFields(temp);\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        \r\n            <div className={classes.root}>\r\n                {/* <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            className={classes.menuButton}\r\n                            color=\"inherit\"\r\n                            aria-label=\"menu\"\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            News\r\n                        </Typography>\r\n                        <Button color=\"inherit\">Login</Button>\r\n                    </Toolbar>\r\n                </AppBar> */}\r\n<AppBar />\r\n\r\n                <div className=\"pos-center\">\r\n                    <Row>\r\n                        <h1 className=\"pos-center\"> Login </h1>\r\n                    </Row>\r\n                    <Row>\r\n                        <form className={classes.root} autoComplete=\"off\" >\r\n                            <Colxx xxs=\"12\" sm=\"4\" md=\"4\" className=\"mb-1-display\">\r\n                                <TextField id=\"standard-basic\" label=\"Username\" onChange={(event) => {\r\n                                    OnChangeHandler('username', event.target.value);\r\n                                }} />\r\n                                <FormText className=\"color-red\">\r\n                                    {formErrors['username']}\r\n                                </FormText>\r\n                            </Colxx>\r\n\r\n\r\n                            <Colxx xxs=\"12\" sm=\"4\" md=\"4\" className=\"mb-1-display\">\r\n                                <TextField id=\"standard-basic\" label=\"Password\" onChange={(event) => {\r\n                                    OnChangeHandler('password', event.target.value);\r\n                                }} />\r\n                                <FormText className=\"color-red\">\r\n                                    {formErrors['password']}\r\n                                </FormText>\r\n                            </Colxx>\r\n\r\n\r\n\r\n                        </form>\r\n                        <Row>\r\n                            <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\r\n\r\n                                <Link><p onClick={submitForm} className='p-t-l-r'> SUBMIT</p></Link>\r\n                                <Link><p onClick={props.toggle} className='p-t-l-r'> REGISTER</p></Link>\r\n\r\n                            </ButtonGroup>\r\n\r\n                        </Row>\r\n                    </Row>\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default LoginPage;","C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\folder\\loginFolder\\appBar.js",["99","100"],"import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            // width: '25ch',\r\n            flexGrow: 1\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2)\r\n          },\r\n          title: {\r\n            flexGrow: 1\r\n          }\r\n    },\r\n}));\r\n\r\nconst TopBar = () => {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <>\r\n          <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            className={classes.menuButton}\r\n                            color=\"inherit\"\r\n                            aria-label=\"menu\"\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            News\r\n                        </Typography>\r\n                        <Button color=\"inherit\">Login</Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default TopBar;","C:\\Users\\ParmeshM\\React_Practise\\training_for_better_react\\src\\folder\\homePage\\drawer_TopNav.js",["101","102"],"import React, { useState, useEffect } from 'react'\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n  }));\r\nconst Drawer_TopNav = () => {\r\n\r\n    const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n    return(\r\n<div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Mini variant drawer\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      {/* <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Typography paragraph>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt\r\n          ut labore et dolore magna aliqua. Rhoncus dolor purus non enim praesent elementum\r\n          facilisis leo vel. Risus at ultrices mi tempus imperdiet. Semper risus in hendrerit\r\n          gravida rutrum quisque non tellus. Convallis convallis tellus id interdum velit laoreet id\r\n          donec ultrices. Odio morbi quis commodo odio aenean sed adipiscing. Amet nisl suscipit\r\n          adipiscing bibendum est ultricies integer quis. Cursus euismod quis viverra nibh cras.\r\n          Metus vulputate eu scelerisque felis imperdiet proin fermentum leo. Mauris commodo quis\r\n          imperdiet massa tincidunt. Cras tincidunt lobortis feugiat vivamus at augue. At augue eget\r\n          arcu dictum varius duis at consectetur lorem. Velit sed ullamcorper morbi tincidunt. Lorem\r\n          donec massa sapien faucibus et molestie ac.\r\n        </Typography>\r\n        <Typography paragraph>\r\n          Consequat mauris nunc congue nisi vitae suscipit. Fringilla est ullamcorper eget nulla\r\n          facilisi etiam dignissim diam. Pulvinar elementum integer enim neque volutpat ac\r\n          tincidunt. Ornare suspendisse sed nisi lacus sed viverra tellus. Purus sit amet volutpat\r\n          consequat mauris. Elementum eu facilisis sed odio morbi. Euismod lacinia at quis risus sed\r\n          vulputate odio. Morbi tincidunt ornare massa eget egestas purus viverra accumsan in. In\r\n          hendrerit gravida rutrum quisque non tellus orci ac. Pellentesque nec nam aliquam sem et\r\n          tortor. Habitant morbi tristique senectus et. Adipiscing elit duis tristique sollicitudin\r\n          nibh sit. Ornare aenean euismod elementum nisi quis eleifend. Commodo viverra maecenas\r\n          accumsan lacus vel facilisis. Nulla posuere sollicitudin aliquam ultrices sagittis orci a.\r\n        </Typography>\r\n      </main> */}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Drawer_TopNav;\r\n",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"111","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"112","line":8,"column":3,"nodeType":"109","messageId":"110","endLine":8,"endColumn":7},{"ruleId":"103","replacedBy":"113"},{"ruleId":"105","replacedBy":"114"},{"ruleId":"103","replacedBy":"115"},{"ruleId":"105","replacedBy":"116"},{"ruleId":"107","severity":1,"message":"111","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"111","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"117","line":5,"column":8,"nodeType":"109","messageId":"110","endLine":5,"endColumn":14},{"ruleId":"107","severity":1,"message":"118","line":9,"column":22,"nodeType":"109","messageId":"110","endLine":9,"endColumn":28},{"ruleId":"107","severity":1,"message":"119","line":10,"column":5,"nodeType":"109","messageId":"110","endLine":10,"endColumn":11},{"ruleId":"107","severity":1,"message":"120","line":11,"column":5,"nodeType":"109","messageId":"110","endLine":11,"endColumn":10},{"ruleId":"107","severity":1,"message":"121","line":16,"column":5,"nodeType":"109","messageId":"110","endLine":16,"endColumn":9},{"ruleId":"107","severity":1,"message":"122","line":17,"column":5,"nodeType":"109","messageId":"110","endLine":17,"endColumn":14},{"ruleId":"107","severity":1,"message":"123","line":18,"column":5,"nodeType":"109","messageId":"110","endLine":18,"endColumn":13},{"ruleId":"107","severity":1,"message":"124","line":19,"column":5,"nodeType":"109","messageId":"110","endLine":19,"endColumn":8},{"ruleId":"107","severity":1,"message":"125","line":20,"column":5,"nodeType":"109","messageId":"110","endLine":20,"endColumn":12},{"ruleId":"107","severity":1,"message":"126","line":21,"column":5,"nodeType":"109","messageId":"110","endLine":21,"endColumn":15},{"ruleId":"107","severity":1,"message":"127","line":22,"column":5,"nodeType":"109","messageId":"110","endLine":22,"endColumn":12},{"ruleId":"107","severity":1,"message":"128","line":23,"column":5,"nodeType":"109","messageId":"110","endLine":23,"endColumn":15},{"ruleId":"107","severity":1,"message":"129","line":24,"column":5,"nodeType":"109","messageId":"110","endLine":24,"endColumn":13},{"ruleId":"107","severity":1,"message":"130","line":25,"column":5,"nodeType":"109","messageId":"110","endLine":25,"endColumn":10},{"ruleId":"107","severity":1,"message":"131","line":27,"column":5,"nodeType":"109","messageId":"110","endLine":27,"endColumn":14},{"ruleId":"107","severity":1,"message":"132","line":31,"column":17,"nodeType":"109","messageId":"110","endLine":31,"endColumn":26},{"ruleId":"107","severity":1,"message":"133","line":63,"column":25,"nodeType":"109","messageId":"110","endLine":63,"endColumn":39},{"ruleId":"107","severity":1,"message":"134","line":3,"column":22,"nodeType":"109","messageId":"110","endLine":3,"endColumn":29},{"ruleId":"107","severity":1,"message":"135","line":7,"column":11,"nodeType":"109","messageId":"110","endLine":7,"endColumn":18},{"ruleId":"107","severity":1,"message":"136","line":9,"column":17,"nodeType":"109","messageId":"110","endLine":9,"endColumn":23},{"ruleId":"107","severity":1,"message":"137","line":13,"column":16,"nodeType":"109","messageId":"110","endLine":13,"endColumn":23},{"ruleId":"138","severity":1,"message":"139","line":19,"column":8,"nodeType":"140","endLine":19,"endColumn":10,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":25,"column":5,"nodeType":"144","endLine":25,"endColumn":22},{"ruleId":"107","severity":1,"message":"111","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"145","line":1,"column":38,"nodeType":"109","messageId":"110","endLine":1,"endColumn":53},{"ruleId":"107","severity":1,"message":"117","line":7,"column":8,"nodeType":"109","messageId":"110","endLine":7,"endColumn":14},{"ruleId":"107","severity":1,"message":"118","line":10,"column":22,"nodeType":"109","messageId":"110","endLine":10,"endColumn":28},{"ruleId":"107","severity":1,"message":"119","line":11,"column":5,"nodeType":"109","messageId":"110","endLine":11,"endColumn":11},{"ruleId":"107","severity":1,"message":"120","line":12,"column":5,"nodeType":"109","messageId":"110","endLine":12,"endColumn":10},{"ruleId":"107","severity":1,"message":"146","line":59,"column":12,"nodeType":"109","messageId":"110","endLine":59,"endColumn":18},{"ruleId":"107","severity":1,"message":"147","line":59,"column":20,"nodeType":"109","messageId":"110","endLine":59,"endColumn":29},{"ruleId":"107","severity":1,"message":"133","line":72,"column":25,"nodeType":"109","messageId":"110","endLine":72,"endColumn":39},{"ruleId":"107","severity":1,"message":"108","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"111","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"108","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"111","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.",["148"],["149"],["148"],["149"],"'Button' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Card' is defined but never used.","'CardTitle' is defined but never used.","'CardBody' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'TabContent' is defined but never used.","'TabPane' is defined but never used.","'CardHeader' is defined but never used.","'Collapse' is defined but never used.","'Input' is defined but never used.","'FormGroup' is defined but never used.","'Separator' is defined but never used.","'setValidations' is assigned a value but never used.","'NavLink' is defined but never used.","'history' is assigned a value but never used.","'setRes' is assigned a value but never used.","'setTemp' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'temp'. Either include it or remove the dependency array.","ArrayExpression",["150"],"react/jsx-pascal-case","Imported JSX component Drawer_TopNav must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'useLocalStorage' is defined but never used.","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},"Update the dependencies array to be: [temp]",{"range":"153","text":"154"},[522,524],"[temp]"]